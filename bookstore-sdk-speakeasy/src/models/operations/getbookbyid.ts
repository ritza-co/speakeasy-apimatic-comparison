/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

export type GetBookByIdRequest = {
    /**
     * ID of the book to return
     */
    bookId: number;
};

/**
 * A single book
 */
export type GetBookByIdResponseBody =
    | (components.ProgrammingBook & { category: "Programming" })
    | (components.FantasyBook & { category: "Fantasy" })
    | (components.SciFiBook & { category: "Sci-fi" });

/** @internal */
export const GetBookByIdRequest$inboundSchema: z.ZodType<
    GetBookByIdRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    bookId: z.number().int(),
});

/** @internal */
export type GetBookByIdRequest$Outbound = {
    bookId: number;
};

/** @internal */
export const GetBookByIdRequest$outboundSchema: z.ZodType<
    GetBookByIdRequest$Outbound,
    z.ZodTypeDef,
    GetBookByIdRequest
> = z.object({
    bookId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookByIdRequest$ {
    /** @deprecated use `GetBookByIdRequest$inboundSchema` instead. */
    export const inboundSchema = GetBookByIdRequest$inboundSchema;
    /** @deprecated use `GetBookByIdRequest$outboundSchema` instead. */
    export const outboundSchema = GetBookByIdRequest$outboundSchema;
    /** @deprecated use `GetBookByIdRequest$Outbound` instead. */
    export type Outbound = GetBookByIdRequest$Outbound;
}

/** @internal */
export const GetBookByIdResponseBody$inboundSchema: z.ZodType<
    GetBookByIdResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.ProgrammingBook$inboundSchema.and(
        z
            .object({ category: z.literal("Programming") })
            .transform((v) => ({ category: v.category }))
    ),
    components.FantasyBook$inboundSchema.and(
        z.object({ category: z.literal("Fantasy") }).transform((v) => ({ category: v.category }))
    ),
    components.SciFiBook$inboundSchema.and(
        z.object({ category: z.literal("Sci-fi") }).transform((v) => ({ category: v.category }))
    ),
]);

/** @internal */
export type GetBookByIdResponseBody$Outbound =
    | (components.ProgrammingBook$Outbound & { category: "Programming" })
    | (components.FantasyBook$Outbound & { category: "Fantasy" })
    | (components.SciFiBook$Outbound & { category: "Sci-fi" });

/** @internal */
export const GetBookByIdResponseBody$outboundSchema: z.ZodType<
    GetBookByIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetBookByIdResponseBody
> = z.union([
    components.ProgrammingBook$outboundSchema.and(
        z
            .object({ category: z.literal("Programming") })
            .transform((v) => ({ category: v.category }))
    ),
    components.FantasyBook$outboundSchema.and(
        z.object({ category: z.literal("Fantasy") }).transform((v) => ({ category: v.category }))
    ),
    components.SciFiBook$outboundSchema.and(
        z.object({ category: z.literal("Sci-fi") }).transform((v) => ({ category: v.category }))
    ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBookByIdResponseBody$ {
    /** @deprecated use `GetBookByIdResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetBookByIdResponseBody$inboundSchema;
    /** @deprecated use `GetBookByIdResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetBookByIdResponseBody$outboundSchema;
    /** @deprecated use `GetBookByIdResponseBody$Outbound` instead. */
    export type Outbound = GetBookByIdResponseBody$Outbound;
}
