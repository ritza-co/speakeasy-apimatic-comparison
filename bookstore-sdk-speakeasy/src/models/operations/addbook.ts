/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as components from "../components/index.js";
import * as z from "zod";

/**
 * Book object to be added
 */
export type AddBookRequestBody =
    | (components.ProgrammingBook & { category: "Programming" })
    | (components.FantasyBook & { category: "Fantasy" })
    | (components.SciFiBook & { category: "Sci-fi" });

/**
 * Book created successfully
 */
export type AddBookResponseBody =
    | (components.ProgrammingBook & { category: "Programming" })
    | (components.FantasyBook & { category: "Fantasy" })
    | (components.SciFiBook & { category: "Sci-fi" });

/** @internal */
export const AddBookRequestBody$inboundSchema: z.ZodType<
    AddBookRequestBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.ProgrammingBook$inboundSchema.and(
        z
            .object({ category: z.literal("Programming") })
            .transform((v) => ({ category: v.category }))
    ),
    components.FantasyBook$inboundSchema.and(
        z.object({ category: z.literal("Fantasy") }).transform((v) => ({ category: v.category }))
    ),
    components.SciFiBook$inboundSchema.and(
        z.object({ category: z.literal("Sci-fi") }).transform((v) => ({ category: v.category }))
    ),
]);

/** @internal */
export type AddBookRequestBody$Outbound =
    | (components.ProgrammingBook$Outbound & { category: "Programming" })
    | (components.FantasyBook$Outbound & { category: "Fantasy" })
    | (components.SciFiBook$Outbound & { category: "Sci-fi" });

/** @internal */
export const AddBookRequestBody$outboundSchema: z.ZodType<
    AddBookRequestBody$Outbound,
    z.ZodTypeDef,
    AddBookRequestBody
> = z.union([
    components.ProgrammingBook$outboundSchema.and(
        z
            .object({ category: z.literal("Programming") })
            .transform((v) => ({ category: v.category }))
    ),
    components.FantasyBook$outboundSchema.and(
        z.object({ category: z.literal("Fantasy") }).transform((v) => ({ category: v.category }))
    ),
    components.SciFiBook$outboundSchema.and(
        z.object({ category: z.literal("Sci-fi") }).transform((v) => ({ category: v.category }))
    ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBookRequestBody$ {
    /** @deprecated use `AddBookRequestBody$inboundSchema` instead. */
    export const inboundSchema = AddBookRequestBody$inboundSchema;
    /** @deprecated use `AddBookRequestBody$outboundSchema` instead. */
    export const outboundSchema = AddBookRequestBody$outboundSchema;
    /** @deprecated use `AddBookRequestBody$Outbound` instead. */
    export type Outbound = AddBookRequestBody$Outbound;
}

/** @internal */
export const AddBookResponseBody$inboundSchema: z.ZodType<
    AddBookResponseBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.ProgrammingBook$inboundSchema.and(
        z
            .object({ category: z.literal("Programming") })
            .transform((v) => ({ category: v.category }))
    ),
    components.FantasyBook$inboundSchema.and(
        z.object({ category: z.literal("Fantasy") }).transform((v) => ({ category: v.category }))
    ),
    components.SciFiBook$inboundSchema.and(
        z.object({ category: z.literal("Sci-fi") }).transform((v) => ({ category: v.category }))
    ),
]);

/** @internal */
export type AddBookResponseBody$Outbound =
    | (components.ProgrammingBook$Outbound & { category: "Programming" })
    | (components.FantasyBook$Outbound & { category: "Fantasy" })
    | (components.SciFiBook$Outbound & { category: "Sci-fi" });

/** @internal */
export const AddBookResponseBody$outboundSchema: z.ZodType<
    AddBookResponseBody$Outbound,
    z.ZodTypeDef,
    AddBookResponseBody
> = z.union([
    components.ProgrammingBook$outboundSchema.and(
        z
            .object({ category: z.literal("Programming") })
            .transform((v) => ({ category: v.category }))
    ),
    components.FantasyBook$outboundSchema.and(
        z.object({ category: z.literal("Fantasy") }).transform((v) => ({ category: v.category }))
    ),
    components.SciFiBook$outboundSchema.and(
        z.object({ category: z.literal("Sci-fi") }).transform((v) => ({ category: v.category }))
    ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddBookResponseBody$ {
    /** @deprecated use `AddBookResponseBody$inboundSchema` instead. */
    export const inboundSchema = AddBookResponseBody$inboundSchema;
    /** @deprecated use `AddBookResponseBody$outboundSchema` instead. */
    export const outboundSchema = AddBookResponseBody$outboundSchema;
    /** @deprecated use `AddBookResponseBody$Outbound` instead. */
    export type Outbound = AddBookResponseBody$Outbound;
}
