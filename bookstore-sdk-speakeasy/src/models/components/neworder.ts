/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type NewOrder = {
    user: number;
    products: Array<number>;
};

/** @internal */
export const NewOrder$inboundSchema: z.ZodType<NewOrder, z.ZodTypeDef, unknown> = z.object({
    user: z.number().int(),
    products: z.array(z.number().int()),
});

/** @internal */
export type NewOrder$Outbound = {
    user: number;
    products: Array<number>;
};

/** @internal */
export const NewOrder$outboundSchema: z.ZodType<NewOrder$Outbound, z.ZodTypeDef, NewOrder> =
    z.object({
        user: z.number().int(),
        products: z.array(z.number().int()),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewOrder$ {
    /** @deprecated use `NewOrder$inboundSchema` instead. */
    export const inboundSchema = NewOrder$inboundSchema;
    /** @deprecated use `NewOrder$outboundSchema` instead. */
    export const outboundSchema = NewOrder$outboundSchema;
    /** @deprecated use `NewOrder$Outbound` instead. */
    export type Outbound = NewOrder$Outbound;
}
